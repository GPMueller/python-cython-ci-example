import os
import sys
import subprocess


__all__ = ['get_gitversion']


def get_gitversion(pypkg, verbose):
    # Try to get the version from git describe
    __version__ = None
    try:
        if verbose:
            print('Trying to get the version from git describe')
        git_describe = subprocess.check_output(["git", "describe", "--tags"])
        version_words = git_describe.decode('utf-8').strip().split('-')
        __version__ = version_words[0]
        if len(version_words) > 1:
            __version__ += '.post' + version_words[1]
        if verbose:
            print('Version from git describe: {}'.format(__version__))
    except (subprocess.CalledProcessError, OSError):
        pass

    # Interact with version.py
    fn_version = os.path.join(os.path.dirname(__file__), '..', pypkg, 'version.py')
    version_template = """\
    \"""Do not edit this file, versioning is governed by ``git describe --tags`` and ``setup.py``.\"""
    __version__ = '{}'
    """
    if __version__ is None:
        if verbose:
            print('Trying to get the version from {}',format(fn_version))
        # Try to load the git version tag from version.py
        try:
            with open(fn_version, 'r') as fh:
                __version__ = fh.read().split('=')[-1].replace('\'', '').strip()
        except IOError:
            print('Could not determine version. Giving up.')
            sys.exit(1)
        if verbose:
            print('Version according to {}: {}'.format(fn_version, __version__))
    else:
        # Store the git version tag in version.py
        if verbose:
            print('Writing version to {}'.format(fn_version))
        with open(fn_version, 'w') as fh:
            fh.write(version_template.format(__version__))
